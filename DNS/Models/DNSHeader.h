//
//  DNSHeader.h
//  DNS
//
//  Created by Victor Gama on 11/10/2018.
//  Copyright Â© 2018 Victor Gama. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "DNSOPCode.h"
#import "DNSRCode.h"

/*
 1  1  1  1  1  1
 0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5
 +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 |                      ID                       |
 +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 |QR|   OpCode  |AA|TC|RD|RA| Z|AD|CD|   RCODE   |
 +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 |                QDCOUNT/ZOCOUNT                |
 +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 |                ANCOUNT/PRCOUNT                |
 +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 |                NSCOUNT/UPCOUNT                |
 +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 |                    ARCOUNT                    |
 +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
 */

NS_ASSUME_NONNULL_BEGIN

@interface DNSHeader : NSObject <NSCopying>

/**
 16-bit identification field generated by the device that creates the DNS query.
 It is copied by the server into the response, so it can be used by that device
 to match that query to the corresponding reply received from a DNS server. This
 is used in a manner similar to how the Identifier field is used in many of the
 ICMP message types.
 */
@property (nonatomic) uint16_t id;

/**
 Determines whether this header belongs to a query or answer.
 */
@property (nonatomic) BOOL isQuery;

/**
 Specifies the type of query the message is carrying. This field is set by the
 creator of the query and copied unchanved into the response.
 */
@property (nonatomic) DNSOPCode opCode;

/**
 Indicates that the server that created the response is authoritative for the
 zone in which the domain name specified in the Question section is located.
 */
@property (nonatomic) BOOL authoritativeAnswer;

/**
 Indicates that the message was truncated due to its length being longer than
 the maximum permitted for the type of transport mechanism used. TCP doesn't
 have a length limit for messages, while UDP messages are limited to 512 bytes,
 so this bit being sent usually is an indication that the message was sent using
 UDP and was too long to fit. The client may need to establish a TCP session to
 get the full message. On the other hand, if the portion truncated was part of
 the Additional section, it may choose not to bother.
 */
@property (nonatomic) BOOL truncated;

/**
 When set in a query, requests that the server receiving the query attempt to
 answer the query recursively, if the server supports recursive resolution. The
 value of this bit is not changed in the response.
 */
@property (nonatomic) BOOL recursionDesired;

/**
 Indicates whether the server creating the response supports recursive queries.
 This can then be noted by the device that sent the query for future use.
 */
@property (nonatomic) BOOL recursionAvailable;

/**
 Indicates in a response that all data included in the answer and authority
 sections of the response have been authenticated by the server according to the
 policies of that server.
 */
@property (nonatomic) BOOL authenticatedData;

/**
 When set in a query, instructs the replying server to not perform policy
 checking.
 */
@property (nonatomic) BOOL checkingDisabled;

/**
 Set to DNSRCodeNoError in queries, this is changed by the replying server in
 a response to convey the results of processing the query. This field is used
 to indicate if the query was answered successfully, or if some kind of error
 occurred.
 */
@property (nonatomic) DNSRCode responseCode;

/**
 Specifies the number of questions in the Question section of the message.
 */
@property (nonatomic) uint16_t questionCount;

/**
 Specifies the number of resource records in the Answer section of the message.
 */
@property (nonatomic) uint16_t answerRecordCount;

/**
 Specifies the number of resource records in the Authority section of the
 message.
 */
@property (nonatomic) uint16_t authorityRecordCount;

/**
 Specifies the number of resource records in the Additional section of the
 message.
 */
@property (nonatomic) uint16_t additionalRecordCount;

@end

NS_ASSUME_NONNULL_END
